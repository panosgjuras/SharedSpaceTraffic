dspeed = subset(eldat, shared==1)$speed - mean(subset(eldat, shared==1)$speed),
ped = 30*subset(eldat, shared==1)$ped,
cross = 30*subset(eldat, shared==1)$cross,
shared = subset(eldat, case==x)$shared,
oneway = subset(eldat, case==x)$oneway,
park = subset(eldat, case==x)$park,
mark = subset(eldat, case==x)$mark,
trees = subset(eldat, case==x)$trees,
bollards = subset(eldat, case==x)$bollards,
width = subset(eldat, case==x)$width)))
traf<-rbind(traf, data.frame(case=x, flow=60/subset(eldat, shared==1)$headway, # Add Nafplio data
dspeed = subset(eldat, shared==1)$speed - mean(subset(eldat, shared==1)$speed),
ped = 30*subset(eldat, shared==1)$ped,
cross = 30*subset(eldat, shared==1)$cross,
shared = subset(eldat, case==x)$shared,
oneway = subset(eldat, case==x)$oneway,
park = subset(eldat, case==x)$park,
mark = subset(eldat, case==x)$mark,
trees = subset(eldat, case==x)$trees,
bollards = subset(eldat, case==x)$bollards,
width = subset(eldat, case==x)$width))
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
x='shnaf'
traf<-rbind(traf, data.frame(case=x, flow=60/subset(eldat, shared==1)$headway, # Add Nafplio data
dspeed = subset(eldat, shared==1)$speed - mean(subset(eldat, shared==1)$speed),
ped = 30*subset(eldat, shared==1)$ped,
cross = 30*subset(eldat, shared==1)$cross,
shared = subset(eldat, case==x)$shared,
oneway = subset(eldat, case==x)$oneway,
park = subset(eldat, case==x)$park,
mark = subset(eldat, case==x)$mark,
trees = subset(eldat, case==x)$trees,
bollards = subset(eldat, case==x)$bollards,
width = subset(eldat, case==x)$width))
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
x='shnaf'
traf<-rbind(traf, data.frame(case=x, flow=60/subset(eldat, shared==1)$headway, # Add Nafplio data
dspeed = subset(eldat, shared==1)$speed - mean(subset(eldat, shared==1)$speed),
ped = 30*subset(eldat, shared==1)$ped,
cross = 30*subset(eldat, shared==1)$cross,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_seg))
x='shnaf'
traf<-rbind(traf, data.frame(case=x, flow=60/subset(eldat, shared==1)$headway, # Add Nafplio data
dspeed = subset(eldat, shared==1)$speed - mean(subset(eldat, shared==1)$speed),
ped = 30*subset(eldat, shared==1)$ped,
cross = 30*subset(eldat, shared==1)$cross,
shared = subset(df, shared==1)$shared,
oneway = subset(df, shared==1)$oneway,
park = subset(df, shared==1)$park,
mark = subset(df, shared==1)$mark,
trees = subset(df, shared==1)$trees,
bollards = subset(df, shared==1)$bollards,
width = subset(df, shared==1)$width,
cross_y = subset(df, shared==1)$width,
s_width = subset(df, shared==1)$s_width,
inters = subset(df, shared==1)$inters,
bench = subset(df, shared==1)$bench,
obst = subset(df, shared==1)$obst,
lev_segr = subset(df, shared==1)$lev_seg))
library(ggplot2)
library(ggpubr)
library(corrplot)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
gerdat<-read.csv2('datasets/datasets_germany_DESIGN.csv', header=T, dec=".", sep=",")
eldat<-read.csv2('datasets/amalias_traffic_dataset_DESIGN.csv', header=T, dec=".", sep=",")
View(eldat)
library(ggplot2)
library(ggpubr)
library(corrplot)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
gerdat<-read.csv2('datasets/datasets_germany_DESIGN.csv', header=T, dec=".", sep=",")
eldat<-read.csv2('datasets/amalias_traffic_dataset_DESIGN.csv', header=T, dec=".", sep=",")
corel=data.frame(ped = gerdat$n_pedestrians, flow = gerdat$n_cars,
cycle = gerdat$n_cyclists, car_speed = gerdat$mean_car_speed,
cycle_speed = gerdat$mean_car_speed, cross = gerdat$ped_crossing,
ped_d_circ = gerdat$ped_dens_circ,
car_d_circ = gerdat$car_dens_circ)
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, p.mat = testRes$p, sig.level = 0.05, insig = "blank", diag=FALSE)
# Starting with fundamental diagrams
# density vs flow
ggplot(subset(gerdat, case=='fsbr'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
#geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='lsho'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
#geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='mke'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
# density vs speed
ggplot(subset(gerdat, case=='fsbr'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2)) # PANOS: no difference, we have to check density data
ggplot(subset(gerdat, case=='lsho'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='mke'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2))
# flow vs speed
ggplot(subset(gerdat, case=='fsbr'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # small decrease of speed
max(subset(gerdat, case=='fsbr')$n_cars)*30 # 810 cars/h, close to capacity
cor.test(subset(gerdat, case=='fsbr')$n_cars, subset(gerdat, case=='fsbr')$mean_car_speed) # correlation -0.081,
ggplot(subset(gerdat, case=='lsho'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # no change
max(subset(gerdat, case=='lsho')$n_cars)*30 # 330 cars/h in mke, low flows, far from capacity
cor.test(subset(gerdat, case=='lsho')$n_cars, subset(gerdat, case=='lsho')$mean_car_speed) # no correlation
ggplot(subset(gerdat, case=='mke'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # increase of speed with higher flow
max(subset(gerdat, case=='mke')$n_cars)*30 # 270 cars/h in mke, low flows, far from capacity
cor.test(subset(gerdat, case=='mke')$n_cars, subset(gerdat, case=='mke')$mean_car_speed) # correlation + 0.1729
ggplot(subset(eldat, shared==1), aes(x=60/headway, y=speed))+geom_point()+theme_bw()+ # Greece
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # no change, very low flows
max(1/subset(eldat, shared==1)$headway)*60 # 750 pcu/h in Nafplio, seems far from capacity
cor.test(60/subset(eldat, shared==1)$headway, subset(eldat, shared==1)$speed) # no significant correlation
mean(subset(gerdat, case=='fsbr')$mean_car_speed) # PANOS: higher mean speed in fsbr, remember that higher flows but no capacity
# therefore more cars higher free flow speed, this is logical
mean(subset(gerdat, case=='lsho')$mean_car_speed)
View(eldat)
library(ggplot2)
library(ggpubr)
library(corrplot)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
gerdat<-read.csv2('datasets/datasets_germany_DESIGN.csv', header=T, dec=".", sep=",")
eldat<-read.csv2('datasets/amalias_traffic_dataset_DESIGN.csv', header=T, dec=".", sep=",")
corel=data.frame(ped = gerdat$n_pedestrians, flow = gerdat$n_cars,
cycle = gerdat$n_cyclists, car_speed = gerdat$mean_car_speed,
cycle_speed = gerdat$mean_car_speed, cross = gerdat$ped_crossing,
ped_d_circ = gerdat$ped_dens_circ,
car_d_circ = gerdat$car_dens_circ)
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, p.mat = testRes$p, sig.level = 0.05, insig = "blank", diag=FALSE)
# Starting with fundamental diagrams
# density vs flow
ggplot(subset(gerdat, case=='fsbr'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
#geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='lsho'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
#geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='mke'), aes(y=n_cars, x=car_dens_circ))+geom_point()+theme_bw()#+
# density vs speed
ggplot(subset(gerdat, case=='fsbr'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2)) # PANOS: no difference, we have to check density data
ggplot(subset(gerdat, case=='lsho'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2))
ggplot(subset(gerdat, case=='mke'), aes(y=mean_car_speed, x=car_dens_circ))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2))
# flow vs speed
ggplot(subset(gerdat, case=='fsbr'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # small decrease of speed
max(subset(gerdat, case=='fsbr')$n_cars)*30 # 810 cars/h, close to capacity
cor.test(subset(gerdat, case=='fsbr')$n_cars, subset(gerdat, case=='fsbr')$mean_car_speed) # correlation -0.081,
ggplot(subset(gerdat, case=='lsho'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # no change
max(subset(gerdat, case=='lsho')$n_cars)*30 # 330 cars/h in mke, low flows, far from capacity
cor.test(subset(gerdat, case=='lsho')$n_cars, subset(gerdat, case=='lsho')$mean_car_speed) # no correlation
ggplot(subset(gerdat, case=='mke'), aes(x=30*n_cars, y=mean_car_speed))+geom_point()+theme_bw()+
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # increase of speed with higher flow
max(subset(gerdat, case=='mke')$n_cars)*30 # 270 cars/h in mke, low flows, far from capacity
cor.test(subset(gerdat, case=='mke')$n_cars, subset(gerdat, case=='mke')$mean_car_speed) # correlation + 0.1729
ggplot(subset(eldat, shared==1), aes(x=60/headway, y=speed))+geom_point()+theme_bw()+ # Greece
geom_smooth(method=lm, color="red", aes(group=2), formula='y ~ x') # no change, very low flows
max(1/subset(eldat, shared==1)$headway)*60 # 750 pcu/h in Nafplio, seems far from capacity
cor.test(60/subset(eldat, shared==1)$headway, subset(eldat, shared==1)$speed) # no significant correlation
mean(subset(gerdat, case=='fsbr')$mean_car_speed) # PANOS: higher mean speed in fsbr, remember that higher flows but no capacity
# therefore more cars higher free flow speed, this is logical
mean(subset(gerdat, case=='lsho')$mean_car_speed)
mean(subset(gerdat, case=='mke')$mean_car_speed)
# HOT HOT HOT
# create a new dataset, with all shared space sections...
datafr_fun <- function(df, x, dats){
if(dats == 'dats1'){datafr<-data.frame(case=x, flow=30*subset(df, case==x)$n_cars,
dspeed = subset(df, case==x)$mean_car_speed - mean(subset(df, case==x)$mean_car_speed),
ped = 30*subset(df, case==x)$n_pedestrians,
cross = 30*subset(df, case==x)$ped_crossing,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
return(datafr)}
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
# HOT HOT HOT
# create a new dataset, with all shared space sections...
datafr_fun <- function(df, x, dats){
if(dats == 'dats1'){datafr<-data.frame(case=x, flow=30*subset(df, case==x)$n_cars,
dspeed = subset(df, case==x)$mean_car_speed - mean(subset(df, case==x)$mean_car_speed),
ped = 30*subset(df, case==x)$n_pedestrians,
cross = 30*subset(df, case==x)$ped_crossing,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
if(dats == 'dats2'){datafr<-data.frame(case=x, flow=60/subset(df, case==x)$headway,
dspeed = subset(df, case==x)$speed - mean(subset(df, case==x)$speed),
ped = 30*subset(df, case==x)$ped,
cross = 30*subset(df, case==x)$cross,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
return(datafr)}
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
traf<-rbind(traf, datafr_fun(eldat,'covnaf', 'dats2'))
View(traf)
View(traf)
View(gerdat)
# HOT HOT HOT
# create a new dataset, with all shared space sections...
datafr_fun <- function(df, x, dats){
if(dats == 'dats1'){datafr<-data.frame(case=x, flow=30*subset(df, case==x)$n_cars,
dspeed = subset(df, case==x)$mean_car_speed - mean(subset(df, case==x)$mean_car_speed),
lspeed = subset(df, case==x)$mean_car_speed - 15,
ped = 30*subset(df, case==x)$n_pedestrians,
cross = 30*subset(df, case==x)$ped_crossing,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
if(dats == 'dats2'){datafr<-data.frame(case=x, flow=60/subset(df, case==x)$headway,
dspeed = subset(df, case==x)$speed - mean(subset(df, case==x)$speed),
lspeed = subset(df, case==x)$mean_car_speed - 30,
ped = 30*subset(df, case==x)$ped,
cross = 30*subset(df, case==x)$cross,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
return(datafr)}
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
traf<-rbind(traf, datafr_fun(eldat,'covnaf', 'dats2'))
# HOT HOT HOT
# create a new dataset, with all shared space sections...
datafr_fun <- function(df, x, dats){
if(dats == 'dats1'){datafr<-data.frame(case=x, flow=30*subset(df, case==x)$n_cars,
dspeed = subset(df, case==x)$mean_car_speed - mean(subset(df, case==x)$mean_car_speed),
lspeed = subset(df, case==x)$mean_car_speed - 15,
ped = 30*subset(df, case==x)$n_pedestrians,
cross = 30*subset(df, case==x)$ped_crossing,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
if(dats == 'dats2'){datafr<-data.frame(case=x, flow=60/subset(df, case==x)$headway,
dspeed = subset(df, case==x)$speed - mean(subset(df, case==x)$speed),
lspeed = subset(df, case==x)$speed - 30,
ped = 30*subset(df, case==x)$ped,
cross = 30*subset(df, case==x)$cross,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
return(datafr)}
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
traf<-rbind(traf, datafr_fun(eldat,'covnaf', 'dats2'))
# HOT HOT HOT
# create a new dataset, with all shared space sections...
datafr_fun <- function(df, x, dats){
if(dats == 'dats1'){datafr<-data.frame(case=x, flow=30*subset(df, case==x)$n_cars,
dspeed = subset(df, case==x)$mean_car_speed - mean(subset(df, case==x)$mean_car_speed),
lspeed = subset(df, case==x)$mean_car_speed - 15,
ped = 30*subset(df, case==x)$n_pedestrians,
cross = 30*subset(df, case==x)$ped_crossing,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$width,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
if(dats == 'dats2'){datafr<-data.frame(case=x, flow=60/subset(df, case==x)$headway,
dspeed = subset(df, case==x)$speed - mean(subset(df, case==x)$speed),
lspeed = subset(df, case==x)$speed - 30,
ped = 30*subset(df, case==x)$ped,
cross = 30*subset(df, case==x)$cross,
shared = subset(df, case==x)$shared,
oneway = subset(df, case==x)$oneway,
park = subset(df, case==x)$park,
mark = subset(df, case==x)$mark,
trees = subset(df, case==x)$trees,
bollards = subset(df, case==x)$bollards,
width = subset(df, case==x)$width,
cross_y = subset(df, case==x)$cross_y,
s_width = subset(df, case==x)$s_width,
inters = subset(df, case==x)$inters,
bench = subset(df, case==x)$bench,
obst = subset(df, case==x)$obst,
lev_segr = subset(df, case==x)$lev_segr)}
return(datafr)}
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
traf<-rbind(traf, datafr_fun(eldat,'covnaf', 'dats2'))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway)))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$park)  ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark)  ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) +
factor(traf$bollards)))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) +
factor(traf$bollards) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) + factor(traf$bollards) ))
traf$bollards
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) + factor(traf$bench) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) +
factor(traf$oneway) + factor(traf$mark) + factor(traf$bench) + factor(traf$bench) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) + factor(traf$oneway) + factor(traf$mark) + factor(traf$bench)
+ factor(traf$tries) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) + factor(traf$oneway) + factor(traf$mark) + factor(traf$bench)
+ factor(traf$trees) ))
summary(aov(traf$lspeed~factor(traf$shared) + factor(traf$shared) + factor(traf$oneway) + factor(traf$mark) + factor(traf$trees) + factor(traf$bench)
))
summary(aov(lspeed ~ shared, data = traf ))
summary(aov(lspeed ~ shared + oneway, data = traf ))
summary(aov(lspeed ~ shared + oneway + mark, data = traf ))
summary(aov(lspeed ~ shared + oneway + mark + trees, data = traf ))
summary(aov(lspeed ~ shared + oneway + mark + trees _ bollards, data = traf ))
summary(aov(lspeed ~ shared + oneway + mark + trees + bollards, data = traf ))
summary(aov(lspeed ~ shared + oneway + mark + trees + bollards + width, data = traf ))
summary(aov(lspeed ~ bollards + width, data = traf ))
summary(aov(lspeed ~ shared, data = traf ))
summary(aov(lspeed ~ oneway, data = traf ))
summary(aov(lspeed ~ mark, data = traf ))
summary(aov(lspeed ~ trees, data = traf ))
summary(aov(lspeed ~ bollards, data = traf ))
summary(aov(lspeed ~ width, data = traf ))
summary(aov(lspeed ~ cross_y, data = traf ))
summary(aov(lspeed ~ s_width, data = traf ))
summary(aov(lspeed ~ bench, data = traf ))
summary(aov(lspeed ~ obst, data = traf ))
summary(aov(lspeed ~ lev_segr, data = traf ))
summary(aov(lspeed ~ trees, data = traf ))
summary(aov(lspeed ~ bollards, data = traf ))
summary(aov(lspeed ~ width, data = traf ))
summary(aov(lspeed ~ cross_y, data = traf ))
summary(aov(lspeed ~ s_width, data = traf ))
summary(aov(lspeed ~ bench, data = traf ))
summary(aov(lspeed ~ obst, data = traf ))
summary(aov(lspeed ~ lev_segr, data = traf ))
corel = subset(traf, select = -case)
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, insig = "blank", diag=FALSE)
corel = subset(traf, select = -(case, flow, dspeed, lspeed, ped, cross))
corel = subset(traf, select = -c(case, flow, dspeed, lspeed, ped, cross))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, insig = "blank", diag=FALSE)
corel = subset(traf, select = -c(case, flow, dspeed, lspeed, ped, cross))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
summary(aov(lspeed ~ bollards, data = traf )) # significant
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
summary(aov(lspeed ~ shared, data = traf )) # expected significance
summary(aov(lspeed ~ oneway, data = traf )) # significant
summary(aov(lspeed ~ mark, data = traf )) # significant
summary(aov(lspeed ~ trees, data = traf )) # significant
summary(aov(lspeed ~ bollards, data = traf )) # not significant
summary(aov(lspeed ~ width, data = traf )) # significant
summary(aov(lspeed ~ cross_y, data = traf )) # significant
summary(aov(lspeed ~ s_width, data = traf )) # significant
summary(aov(lspeed ~ bench, data = traf )) # significant
summary(aov(lspeed ~ obst, data = traf )) # significant
summary(aov(lspeed ~ lev_segr, data = traf )) # not significant
corel = subset(traf, select = -c(case, flow, dspeed, lspeed, ped, cross))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
traf<-datafr_fun(gerdat,'fsbr', 'dats1')
traf<-rbind(traf, datafr_fun(gerdat,'lsho', 'dats1'))
traf<-rbind(traf, datafr_fun(gerdat,'mke', 'dats1'))
traf<-rbind(traf, datafr_fun(eldat,'shnaf','dats2'))
traf<-rbind(traf, datafr_fun(eldat,'covnaf', 'dats2'))
corel = subset(traf, select = -c(case, flow, dspeed, lspeed, ped, cross))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
corel = subset(traf, select = -c(case, flow, ped, cross))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
corel = subset(traf, select = -c(case, flow))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
corel = subset(traf, select = -c(case, ))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
corel = subset(traf, select = -c(case))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
traf$pedveh<-traf$ped/traf$veh
traf$pedveh<-traf$ped/traf$flow
corel = subset(traf, select = -c(case))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
traf$pedveh<-traf$ped/traf$flow
corel = subset(traf, select = -c(case))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
View(corel)
traf$pedveh<-traf$ped/(traf$flow + traf$ped)
corel = subset(traf, select = -c(case))
M = cor(corel)
testRes=cor.mtest(corel, conf.level=0.95)
corrplot(M, method = 'number', p.mat = testRes$p, sig.level = 0.05, diag=FALSE)
